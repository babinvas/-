/*
JavaRush. Java Core. Уровень 22. Лекция 8. (2109)

Запретить клонирование

Разреши клонировать класс А
Запрети клонировать класс B
Разреши клонировать класс C
Не забудь о методах equals и hashCode!
*/

public class Solution {
    public static class A implements Cloneable {
        private int i;
        private int j;

        public A(int i, int j) {
            this.i = i;
            this.j = j;
        }

        public int getI() {
            return i;
        }

        public int getJ() {
            return j;
        }

        public Object clone() throws CloneNotSupportedException {
            return super.clone();
        }

        public boolean equals(Object obj) {
            if(this != obj) {
                return false;
            }

            if(obj == null) {
                return false;
            }

            if(!(obj instanceof A)) {
                return false;
            }

            A that = (A) obj;

            return that.i == i && that.j == j;
        }

        public int hashCode() {
            return 31* i + j;
        }
    }

    public static class B extends A {
        private String name;

        public B(int i, int j, String name) {
            super(i, j);
            this.name = name;
        }

        public String getName() {
            return name;
        }

        public Object clone() throws CloneNotSupportedException {
            throw new CloneNotSupportedException();
        }

        public boolean equals(Object obj) {
            if(this != obj) {
                return false;
            }

            if(obj == null) {
                return false;
            }

            if(!(obj instanceof B)) {
                return false;
            }

            B that = (B) obj;

            return (that.getName() == name || that.getName().equals(name)) && that.getI() == super.i && that.getJ() == super.j;
        }

        public int hashCode() {
            return 31* super.i + super.j + (name != null ? name.hashCode() : 0);
        }
    }

    public static class C extends B {
        public C(int i, int j, String name) {
            super(i, j, name);
        }

        public Object clone() throws CloneNotSupportedException {
            C c = new C(this.getI(), this.getJ(), this.getName());
            return c;
        }

        public boolean equals(Object obj) {
            return super.equals(obj);
         }

        public int hashCode() {
            return super.hashCode();
        }
    }

    public static void main(String[] args) {

    }
}
