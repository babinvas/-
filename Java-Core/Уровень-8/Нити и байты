import java.io.*;
import java.util.HashMap;
import java.util.Map;

/*
JavaRush. Java Core. Уровень 18. Лекция 8. (1823)

Нити и байты.

Читайте с консоли имена файлов, пока не будет введено слово "exit".
Передайте имя файла в нить ReadThread.
Нить ReadThread должна найти байт, который встречается в файле максимальное число раз, и добавить его в словарь resultMap,
где параметр String - это имя файла, параметр Integer - это искомый байт.
Закрыть потоки.
*/

public class Solution {
    public static Map<String, Integer> resultMap = new HashMap<String, Integer>();

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String fileName;

        while (!((fileName = reader.readLine()).equals("exit"))) {
            ReadThread readThread = new ReadThread(fileName);
            readThread.start();
        }

        reader.close();
    }

    public static class ReadThread extends Thread {
        public ReadThread(String fileName) {
            super(fileName);
        }

        public void run() {
            //String a = currentThread().getName();
            try (BufferedInputStream bufferedInputStream = new BufferedInputStream(new FileInputStream(getName()))) {

                int[] sumOfEachByte = new int[256];
                int byteFromFile;
                int max = 0;

                while ((byteFromFile = bufferedInputStream.read()) != -1) {
                    sumOfEachByte[byteFromFile]++;
                    if (max < sumOfEachByte[byteFromFile]) {
                        max = sumOfEachByte[byteFromFile];
                    }
                }

                System.out.println(getName() + " " + max);

                for (int i = 0; i < sumOfEachByte.length; i++) {
                    if (sumOfEachByte[i] == max) {
                        System.out.println(getName() + " " + (char) i + " " + max);
                        Solution.resultMap.put(getName(), i);
                    }
                }
            }
            catch (IOException e) {
            }
        }
    }
}
